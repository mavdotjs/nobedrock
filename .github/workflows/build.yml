# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: build
on: [pull_request, push]

jobs:
  build:
    strategy:
      matrix:
        # Use these Java versions
        java: [
          21,    # Current Java LTS
        ]
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v2
      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'microsoft'
      - name: setup deno
        uses: denoland/setup-deno@v2
        with:
            deno-version: v2.x
      - name: make gradle wrapper executable
        run: chmod +x ./gradlew
      - name: build
        run: ./gradlew build
    #   - name: capture build artifacts
    #     if: ${{ matrix.java == '21' }} # Only upload artifacts built from latest java
    #     uses: actions/upload-artifact@v4
    #     with:
    #       name: Artifacts
    #       path: build/libs/
      - name: get release jar and version
        id: release_version
        run: deno -A .github/workflows/getbuildname.ts
      - name: create release
        id: create_release
        uses: comnoco/create-release-action@v2.0.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.release_version.outputs.version }}
          release_name: v${{ steps.release_version.outputs.version }}
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: ./build/libs/${{ steps.release_version.outputs.filename }}
            asset_name: ${{ steps.release_version.outputs.filename }}
            asset_content_type: application/java-archive